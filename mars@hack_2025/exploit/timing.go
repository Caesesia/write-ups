package main

import (
	"fmt"
	"io/ioutil"
	"strings"
	"time"
	"log"
)

const (
	flagFile       = "/flag.txt"
	delayDuration  = 250 * time.Millisecond
)

func printBanner() {
    fmt.Println("   __  __                        _    _            _      ___   ___ ___  _____ "); 
    fmt.Println("  |  \\/  |                 ____ | |  | |          | |    |__ \\ / _ \\__ \\| ____|"); 
    fmt.Println("  | \\  / | __ _ _ __ ___  / __ \\| |__| | __ _  ___| | __    ) | | | | ) | |__"); 
    fmt.Println("  | |\\/| |/ _` | '__/ __|/ / _` |  __  |/ _` |/ __| |/ /   / /| | | |/ /|___ \\ "); 
    fmt.Println("  | |  | | (_| | |  \\__ \\ | (_| | |  | | (_| | (__|   <   / /_| |_| / /_ ___) |"); 
    fmt.Println("  |_|  |_|\\__,_|_|  |___/\\ \\__,_|_|  |_|\\__,_|\\___|_|\\_\\ |____|\\___/____|____/ \n"); 
}

func readFlag(filename string) (string, error) {
	content, err := ioutil.ReadFile(filename)
	if err != nil {
		return "", err
	}
	return strings.TrimSpace(string(content)), nil
}

func checkPassword(input, correctPassword string) bool {
	for i := 0; i < len(input) && i < len(correctPassword); i++ {
		if input[i] != correctPassword[i] {
			time.Sleep(delayDuration)
			return false
		}
	}
	if len(input) != len(correctPassword) {
		return false
	}
	return true
}

func main() {
	correctPassword, err := readFlag(flagFile)
	if err != nil {
		fmt.Printf("Erreur lors de la lecture du fichier : %v\n", err)
		return
	}

	go func() {
		timeout := time.After(600 * time.Second)
		<-timeout
		log.Fatalln("Timeout exception")
	}()

	printBanner()
	fmt.Print("Veuillez saisir le mot de passe ('exit' pour sortir) : ")
	for {
		var input string
		fmt.Scanln(&input)
		if input=="exit" {
			fmt.Println("Bye ...")
			break
		}

		result := checkPassword(input, correctPassword)

		if result {
			fmt.Println("Félicitations ! Vous avez trouvé le flag")
			break
		} else {
			fmt.Printf("Désolé, le mot de passe est incorrect. Tentez à nouveau ('exit' pour sortir) : ")
		}
	}
}

